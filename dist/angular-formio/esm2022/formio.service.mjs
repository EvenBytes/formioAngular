import { Observable } from 'rxjs';
import { Formio } from '@formio/js';
export class FormioService {
    url;
    options;
    formio;
    constructor(url, options) {
        this.url = url;
        this.options = options;
        this.formio = new Formio(this.url, this.options);
    }
    requestWrapper(fn) {
        let record;
        let called = false;
        return Observable.create((observer) => {
            try {
                if (!called) {
                    called = true;
                    fn()
                        .then((_record) => {
                        record = _record;
                        observer.next(record);
                        observer.complete();
                    })
                        .catch((err) => observer.error(err));
                }
                else if (record) {
                    observer.next(record);
                    observer.complete();
                }
            }
            catch (err) {
                observer.error(err);
            }
        });
    }
    saveForm(form, options) {
        return this.requestWrapper(() => this.formio.saveForm(form, options));
    }
    loadForm(query, options) {
        return this.requestWrapper(() => this.formio.loadForm(query, options));
    }
    loadForms(query, options) {
        return this.requestWrapper(() => this.formio.loadForms(query, options));
    }
    loadSubmission(query, options) {
        return this.requestWrapper(() => this.formio.loadSubmission(query, options));
    }
    userPermissions(user, form, submission) {
        return this.requestWrapper(() => this.formio.userPermissions(user, form, submission));
    }
    deleteSubmission(data, options) {
        return this.requestWrapper(() => this.formio.deleteSubmission(data, options));
    }
    saveSubmission(submission, options) {
        return this.requestWrapper(() => this.formio.saveSubmission(submission, options));
    }
    loadSubmissions(query, options) {
        return this.requestWrapper(() => this.formio.loadSubmissions(query, options));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWlvLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyLWZvcm1pby9zcmMvZm9ybWlvLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBWSxNQUFNLE1BQU0sQ0FBQztBQUU1QyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRXBDLE1BQU0sT0FBTyxhQUFhO0lBRUw7SUFBb0I7SUFEaEMsTUFBTSxDQUFNO0lBQ25CLFlBQW1CLEdBQVcsRUFBUyxPQUFnQjtRQUFwQyxRQUFHLEdBQUgsR0FBRyxDQUFRO1FBQVMsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNyRCxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFDRCxjQUFjLENBQUMsRUFBTztRQUNwQixJQUFJLE1BQVcsQ0FBQztRQUNoQixJQUFJLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDbkIsT0FBTyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsUUFBdUIsRUFBRSxFQUFFO1lBQ25ELElBQUk7Z0JBQ0YsSUFBSSxDQUFDLE1BQU0sRUFBRTtvQkFDWCxNQUFNLEdBQUcsSUFBSSxDQUFDO29CQUNkLEVBQUUsRUFBRTt5QkFDRCxJQUFJLENBQUMsQ0FBQyxPQUFZLEVBQUUsRUFBRTt3QkFDckIsTUFBTSxHQUFHLE9BQU8sQ0FBQzt3QkFDakIsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQzt3QkFDdEIsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDO29CQUN0QixDQUFDLENBQUM7eUJBQ0QsS0FBSyxDQUFDLENBQUMsR0FBUSxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7aUJBQzdDO3FCQUFNLElBQUksTUFBTSxFQUFFO29CQUNqQixRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO29CQUN0QixRQUFRLENBQUMsUUFBUSxFQUFFLENBQUM7aUJBQ3JCO2FBQ0Y7WUFBQyxPQUFPLEdBQUcsRUFBRTtnQkFDWixRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQ3JCO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBQ0QsUUFBUSxDQUFDLElBQWdCLEVBQUUsT0FBYTtRQUN0QyxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDeEUsQ0FBQztJQUNELFFBQVEsQ0FBQyxLQUFXLEVBQUUsT0FBYTtRQUNqQyxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDekUsQ0FBQztJQUNELFNBQVMsQ0FBQyxLQUFVLEVBQUUsT0FBYTtRQUNqQyxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDMUUsQ0FBQztJQUNELGNBQWMsQ0FBQyxLQUFXLEVBQUUsT0FBYTtRQUN2QyxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDL0UsQ0FBQztJQUNELGVBQWUsQ0FBQyxJQUFTLEVBQUUsSUFBUyxFQUFFLFVBQWU7UUFDbkQsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQztJQUN4RixDQUFDO0lBQ0QsZ0JBQWdCLENBQUMsSUFBVSxFQUFFLE9BQWE7UUFDeEMsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDaEYsQ0FBQztJQUNELGNBQWMsQ0FBQyxVQUFjLEVBQUUsT0FBYTtRQUMxQyxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDcEYsQ0FBQztJQUNELGVBQWUsQ0FBQyxLQUFXLEVBQUUsT0FBYTtRQUN4QyxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDaEYsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSwgT2JzZXJ2ZXIgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgRm9ybWlvRm9ybSB9IGZyb20gJy4vZm9ybWlvLmNvbW1vbic7XHJcbmltcG9ydCB7IEZvcm1pbyB9IGZyb20gJ0Bmb3JtaW8vanMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEZvcm1pb1NlcnZpY2Uge1xyXG4gIHB1YmxpYyBmb3JtaW86IGFueTtcclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgdXJsOiBzdHJpbmcsIHB1YmxpYyBvcHRpb25zPzogb2JqZWN0KSB7XHJcbiAgICB0aGlzLmZvcm1pbyA9IG5ldyBGb3JtaW8odGhpcy51cmwsIHRoaXMub3B0aW9ucyk7XHJcbiAgfVxyXG4gIHJlcXVlc3RXcmFwcGVyKGZuOiBhbnkpIHtcclxuICAgIGxldCByZWNvcmQ6IGFueTtcclxuICAgIGxldCBjYWxsZWQgPSBmYWxzZTtcclxuICAgIHJldHVybiBPYnNlcnZhYmxlLmNyZWF0ZSgob2JzZXJ2ZXI6IE9ic2VydmVyPGFueT4pID0+IHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBpZiAoIWNhbGxlZCkge1xyXG4gICAgICAgICAgY2FsbGVkID0gdHJ1ZTtcclxuICAgICAgICAgIGZuKClcclxuICAgICAgICAgICAgLnRoZW4oKF9yZWNvcmQ6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgIHJlY29yZCA9IF9yZWNvcmQ7XHJcbiAgICAgICAgICAgICAgb2JzZXJ2ZXIubmV4dChyZWNvcmQpO1xyXG4gICAgICAgICAgICAgIG9ic2VydmVyLmNvbXBsZXRlKCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyOiBhbnkpID0+IG9ic2VydmVyLmVycm9yKGVycikpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAocmVjb3JkKSB7XHJcbiAgICAgICAgICBvYnNlcnZlci5uZXh0KHJlY29yZCk7XHJcbiAgICAgICAgICBvYnNlcnZlci5jb21wbGV0ZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgb2JzZXJ2ZXIuZXJyb3IoZXJyKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG4gIHNhdmVGb3JtKGZvcm06IEZvcm1pb0Zvcm0sIG9wdGlvbnM/OiBhbnkpOiBPYnNlcnZhYmxlPEZvcm1pb0Zvcm0+IHtcclxuICAgIHJldHVybiB0aGlzLnJlcXVlc3RXcmFwcGVyKCgpID0+IHRoaXMuZm9ybWlvLnNhdmVGb3JtKGZvcm0sIG9wdGlvbnMpKTtcclxuICB9XHJcbiAgbG9hZEZvcm0ocXVlcnk/OiBhbnksIG9wdGlvbnM/OiBhbnkpOiBPYnNlcnZhYmxlPEZvcm1pb0Zvcm0+IHtcclxuICAgIHJldHVybiB0aGlzLnJlcXVlc3RXcmFwcGVyKCgpID0+IHRoaXMuZm9ybWlvLmxvYWRGb3JtKHF1ZXJ5LCBvcHRpb25zKSk7XHJcbiAgfVxyXG4gIGxvYWRGb3JtcyhxdWVyeTogYW55LCBvcHRpb25zPzogYW55KTogT2JzZXJ2YWJsZTxGb3JtaW9Gb3JtPiB7XHJcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0V3JhcHBlcigoKSA9PiB0aGlzLmZvcm1pby5sb2FkRm9ybXMocXVlcnksIG9wdGlvbnMpKTtcclxuICB9XHJcbiAgbG9hZFN1Ym1pc3Npb24ocXVlcnk/OiBhbnksIG9wdGlvbnM/OiBhbnkpOiBPYnNlcnZhYmxlPHt9PiB7XHJcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0V3JhcHBlcigoKSA9PiB0aGlzLmZvcm1pby5sb2FkU3VibWlzc2lvbihxdWVyeSwgb3B0aW9ucykpO1xyXG4gIH1cclxuICB1c2VyUGVybWlzc2lvbnModXNlcjogYW55LCBmb3JtOiBhbnksIHN1Ym1pc3Npb246IGFueSk6IE9ic2VydmFibGU8e30+IHtcclxuICAgIHJldHVybiB0aGlzLnJlcXVlc3RXcmFwcGVyKCgpID0+IHRoaXMuZm9ybWlvLnVzZXJQZXJtaXNzaW9ucyh1c2VyLCBmb3JtLCBzdWJtaXNzaW9uKSk7XHJcbiAgfVxyXG4gIGRlbGV0ZVN1Ym1pc3Npb24oZGF0YT86IGFueSwgb3B0aW9ucz86IGFueSk6IE9ic2VydmFibGU8e30+IHtcclxuICAgIHJldHVybiB0aGlzLnJlcXVlc3RXcmFwcGVyKCgpID0+IHRoaXMuZm9ybWlvLmRlbGV0ZVN1Ym1pc3Npb24oZGF0YSwgb3B0aW9ucykpO1xyXG4gIH1cclxuICBzYXZlU3VibWlzc2lvbihzdWJtaXNzaW9uOiB7fSwgb3B0aW9ucz86IGFueSk6IE9ic2VydmFibGU8e30+IHtcclxuICAgIHJldHVybiB0aGlzLnJlcXVlc3RXcmFwcGVyKCgpID0+IHRoaXMuZm9ybWlvLnNhdmVTdWJtaXNzaW9uKHN1Ym1pc3Npb24sIG9wdGlvbnMpKTtcclxuICB9XHJcbiAgbG9hZFN1Ym1pc3Npb25zKHF1ZXJ5PzogYW55LCBvcHRpb25zPzogYW55KTogT2JzZXJ2YWJsZTx7fT4ge1xyXG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdFdyYXBwZXIoKCkgPT4gdGhpcy5mb3JtaW8ubG9hZFN1Ym1pc3Npb25zKHF1ZXJ5LCBvcHRpb25zKSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==